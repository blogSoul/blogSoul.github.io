{"version":3,"file":"component---src-pages-index-tsx-a8cc89c9981582ac34f3.js","mappings":"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","sources":["webpack://gatsby-starter-default/./node_modules/querystring/decode.js","webpack://gatsby-starter-default/./node_modules/querystring/encode.js","webpack://gatsby-starter-default/./node_modules/querystring/index.js","webpack://gatsby-starter-default/./src/Main/ProfileImage.tsx","webpack://gatsby-starter-default/./src/Main/Introduction.tsx","webpack://gatsby-starter-default/./src/Main/CategoryList.tsx","webpack://gatsby-starter-default/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://gatsby-starter-default/./src/Main/PostItem.tsx","webpack://gatsby-starter-default/./src/hooks/useInfiniteScroll.tsx","webpack://gatsby-starter-default/./src/Main/PostList.tsx","webpack://gatsby-starter-default/./src/pages/index.tsx"],"sourcesContent":["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n'use strict'; // If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function (qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n  var maxKeys = 1000;\n\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length; // maxKeys <= 0 means that we should not limit keys count\n\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr,\n        vstr,\n        k,\n        v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (Array.isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n'use strict';\n\nvar stringifyPrimitive = function stringifyPrimitive(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function (obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return Object.keys(obj).map(function (k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n\n      if (Array.isArray(obj[k])) {\n        return obj[k].map(function (v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).filter(Boolean).join(sep);\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq + encodeURIComponent(stringifyPrimitive(obj));\n};","'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');","import styled from '@emotion/styled'\nimport { FunctionComponent } from 'react'\nimport { GatsbyImage, IGatsbyImageData } from \"gatsby-plugin-image\"\n\ntype ProfileImageProps = {\n  profileImage: IGatsbyImageData\n}\n\nconst ProfileImageWrapper = styled(GatsbyImage)`\n  width: 120px;\n  height: 120px;\n  margin-bottom: 30px;\n  border-radius: 50%;\n\n  @media (max-width: 768px) {\n    width: 80px;\n    height: 80px;\n  }\n`\n\nconst ProfileImage: FunctionComponent<ProfileImageProps> = function ({\n  profileImage,\n}) {\n  return <ProfileImageWrapper image={profileImage} alt={'Profile Image'} />\n}\n\nexport default ProfileImage\n","import styled from '@emotion/styled'\nimport { FunctionComponent } from 'react'\nimport ProfileImage from './ProfileImage'\nimport { IGatsbyImageData } from 'gatsby-plugin-image'\n\ntype IntroductionProps = {\n  profileImage: IGatsbyImageData\n}\n\nconst Background = styled.div`\n  width: 100%;\n  background-image: linear-gradient(60deg, #29323c 0%, #485563 100%);\n  color: #ffffff;\n`\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-start;\n  width: 768px;\n  height: 400px;\n  margin: 0 auto;\n\n  @media (max-width: 768px) {\n    width: 100%;\n    height: 300px;\n    padding: 0 200px;\n  }\n`\n\nconst SubTitle = styled.div`\n  font-size: 20px;\n  font-weight: 400;\n\n  @media (max-width: 768px) {\n    font-size: 15px;\n  }\n`\n\nconst Title = styled.div`\n  margin-top: 5px;\n  font-size: 35px;\n  font-weight: 700;\n\n  @media (max-width: 768px) {\n    font-size: 25px;\n  }\n`\n\nconst Introduction: FunctionComponent<IntroductionProps> = function ({\n  profileImage,\n}) {\n  return (\n    <Background>\n      <Wrapper>\n        <ProfileImage profileImage={profileImage} />\n\n        <div>\n          <SubTitle>Nice to Meet You</SubTitle>\n          <Title>I'm Junior Backend Developer Soul</Title>\n        </div>\n      </Wrapper>\n    </Background>\n  )\n}\n\nexport default Introduction\n","import { FunctionComponent, ReactNode } from 'react'\nimport styled from '@emotion/styled'\nimport { Link } from 'gatsby'\n\ntype CategoryItemProps = {\n  active: boolean\n}\n\ntype GatsbyLinkProps = {\n  children: ReactNode\n  className?: string\n  to: string\n} & CategoryItemProps\n\nexport type CategoryListProps = {\n  selectedCategory: string\n  categoryList: {\n    [key: string]: number\n  }\n}\n\nconst CategoryListWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  width: 768px;\n  margin: 100px auto 0;\n\n  @media (max-width: 768px) {\n    width: 100%;\n    margin-top: 50px;\n    padding: 0 20px;\n  }\n`\n\nconst CategoryItem = styled(({ active, ...props }: GatsbyLinkProps) => (\n  <Link {...props} />\n))<CategoryItemProps>`\n  margin-right: 20px;\n  padding: 5px 0;\n  font-size: 18px;\n  font-weight: ${({ active }) => (active ? '800' : '400')};\n  cursor: pointer;\n\n  &:last-of-type {\n    margin-right: 0;\n  }\n\n  @media (max-width: 768px) {\n    font-size: 15px;\n  }\n`\n\nconst CateoryList: FunctionComponent<CategoryListProps> = function ({\n  selectedCategory,\n  categoryList,\n}) {\n  return (\n    <CategoryListWrapper>\n      {Object.entries(categoryList).map(([name, count]) => (\n        <CategoryItem\n          to={`/?category=${name}`}\n          active={name === selectedCategory}\n          key={name}\n        >\n          #{name}({count})\n        </CategoryItem>\n      ))}\n    </CategoryListWrapper>\n  )\n}\n\nexport default CateoryList\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import { FunctionComponent } from 'react'\nimport { Link } from 'gatsby'\nimport styled from '@emotion/styled'\nimport { PostFrontmatterType } from '../pages'\nimport { GatsbyImage } from 'gatsby-plugin-image'\n\ntype PostItemProps = PostFrontmatterType & { link: string }\n\nconst PostItemWrapper = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  border-radius: 10px;\n  box-shadow: 0 0 8px rgba(0, 0, 0, 0.15);\n  transition: 0.3s box-shadow;\n  cursor: pointer;\n\n  &:hover {\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);\n  }\n`\n\nconst ThumbnailImage = styled(GatsbyImage)`\n  width: 100%;\n  height: 200px;\n  border-radius: 10px 10px 0 0;\n`\n\nconst PostItemContent = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  padding: 15px;\n`\n\nconst Title = styled.div`\n  display: -webkit-box;\n  overflow: hidden;\n  margin-bottom: 3px;\n  text-overflow: ellipsis;\n  white-space: normal;\n  overflow-wrap: break-word;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  font-size: 20px;\n  font-weight: 700;\n`\n\nconst Date = styled.div`\n  font-size: 14px;\n  font-weight: 400;\n  opacity: 0.7;\n`\n\nconst Category = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  margin-top: 10px;\n  margin: 10px -5px;\n`\n\nconst CategoryItem = styled.div`\n  margin: 2.5px 5px;\n  padding: 3px 5px;\n  border-radius: 3px;\n  background: black;\n  font-size: 14px;\n  font-weight: 700;\n  color: white;\n`\n\nconst Summary = styled.div`\n  display: -webkit-box;\n  overflow: hidden;\n  margin-top: auto;\n  text-overflow: ellipsis;\n  white-space: normal;\n  overflow-wrap: break-word;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  font-size: 16px;\n  opacity: 0.8;\n`\n\nconst PostItem: FunctionComponent<PostItemProps> = function ({\n  title,\n  date,\n  categories,\n  summary,\n  thumbnail: {\n    childImageSharp: { gatsbyImageData },\n  },\n  link,\n}) {\n  return (\n    <PostItemWrapper to={link}>\n      <ThumbnailImage image={gatsbyImageData} alt={'Post Item Image'} />\n\n      <PostItemContent>\n        <Title>{title}</Title>\n        <Date>{date}</Date>\n        <Category>\n          {categories.map(category => (\n            <CategoryItem key={category}>{category}</CategoryItem>\n          ))}\n        </Category>\n        <Summary>{summary}</Summary>\n      </PostItemContent>\n    </PostItemWrapper>\n  )\n}\n\nexport default PostItem\n","import { MutableRefObject, useEffect, useMemo, useRef, useState } from 'react'\nimport { PostListItemType } from '../types/PostItem.types'\n\nexport type useInfiniteScrollType = {\n  containerRef: MutableRefObject<HTMLDivElement | null>\n  postList: PostListItemType[]\n}\n\nconst NUMBER_OF_ITEMS_PER_PAGE = 10\n\nconst useInfiniteScroll = function (\n  selectedCategory: string,\n  posts: PostListItemType[],\n) {\n  const containerRef: MutableRefObject<HTMLDivElement | null> =\n    useRef<HTMLDivElement>(null)\n  const observer: MutableRefObject<IntersectionObserver | null> =\n    useRef<IntersectionObserver>(null)\n  const [count, setCount] = useState<number>(1)\n\n  const postListByCategory = useMemo<PostListItemType[]>(\n    () =>\n      posts.filter(\n        ({\n          node: {\n            frontmatter: { categories },\n          },\n        }: PostListItemType) =>\n          selectedCategory !== 'All'\n            ? categories.includes(selectedCategory)\n            : true,\n      ),\n    [selectedCategory],\n  )\n\n  useEffect(() => {\n    observer.current = new IntersectionObserver((entries, observer) => {\n      if (!entries[0].isIntersecting) return\n\n      setCount(value => value + 1)\n      observer.unobserve(entries[0].target)\n    })\n  }, [])\n\n  useEffect(() => setCount(1), [selectedCategory])\n\n  useEffect(() => {\n    if (\n      NUMBER_OF_ITEMS_PER_PAGE * count >= postListByCategory.length ||\n      containerRef.current === null ||\n      containerRef.current.children.length === 0 ||\n      observer.current === null\n    )\n      return\n\n    observer.current.observe(\n      containerRef.current.children[containerRef.current?.children.length - 1],\n    )\n  }, [count, selectedCategory])\n\n  return {\n    containerRef,\n    postList: postListByCategory.slice(0, count * NUMBER_OF_ITEMS_PER_PAGE),\n  }\n}\n\nexport default useInfiniteScroll\n","import styled from '@emotion/styled'\nimport { FunctionComponent } from 'react'\nimport PostItem from './PostItem'\nimport { PostListItemType } from '../types/PostItem.types'\nimport useInfiniteScroll, {\n  useInfiniteScrollType,\n} from 'hooks/useInfiniteScroll'\n\nexport type PostType = {\n  node: {\n    id: string\n    frontmatter: {\n      title: string\n      summary: string\n      date: string\n      categories: string[]\n      thumbnail: {\n        publicURL: string\n      }\n    }\n  }\n}\n\ntype PostListProps = {\n  selectedCategory: string\n  posts: PostListItemType[]\n}\n\nconst PostListWrapper = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-gap: 20px;\n  width: 768px;\n  margin: 0 auto;\n  padding: 50px 0 100px;\n\n  @media (max-width: 768px) {\n    grid-template-columns: 1fr;\n    width: 100%;\n    padding: 50px 20px;\n  }\n`\n\nconst PostList: FunctionComponent<PostListProps> = function ({\n  selectedCategory,\n  posts,\n}) {\n  const { containerRef, postList }: useInfiniteScrollType = useInfiniteScroll(\n    selectedCategory,\n    posts,\n  )\n  return (\n    <PostListWrapper ref={containerRef}>\n      {postList.map(\n        ({\n          node: {\n            id,\n            fields: { slug },\n            frontmatter,\n          },\n        }: PostListItemType) => (\n          <PostItem {...frontmatter} link={slug} key={id} />\n        ),\n      )}\n    </PostListWrapper>\n  )\n}\n\nexport default PostList\n","import React, { FunctionComponent, useMemo } from 'react'\nimport Introduction from '../Main/Introduction'\nimport CategoryList, { CategoryListProps } from '../Main/CategoryList'\nimport PostList, { PostType } from '../Main/PostList'\nimport { graphql } from 'gatsby'\nimport { IGatsbyImageData } from 'gatsby-plugin-image'\nimport { ParsedQuery } from 'query-string'\nimport * as queryString from 'querystring'\nimport Template from 'components/Common/Template'\nimport { PostListItemType } from '../types/PostItem.types'\n\ntype IndexPageProps = {\n  location: {\n    search: string\n  }\n  data: {\n    site: {\n      siteMetadata: {\n        title: string\n        description: string\n        siteUrl: string\n      }\n    }\n    allMarkdownRemark: {\n      edges: PostListItemType[]\n    }\n    file: {\n      childImageSharp: {\n        gatsbyImageData: IGatsbyImageData\n      }\n      publicURL: string\n    }\n  }\n}\n\nconst IndexPage: FunctionComponent<IndexPageProps> = function ({\n  location: { search },\n  data: {\n    site: {\n      siteMetadata: { title, description, siteUrl },\n    },\n    allMarkdownRemark: { edges },\n    file: {\n      childImageSharp: { gatsbyImageData },\n      publicURL,\n    },\n  },\n}) {\n  const parsed: ParsedQuery<string> = queryString.parse(search)\n  const parsedCategory = parsed['?category']\n  const selectedCategory: string =\n    typeof parsedCategory !== 'string' || !parsedCategory\n      ? 'All'\n      : parsedCategory\n  const categoryList = useMemo(\n    () =>\n      edges.reduce(\n        (\n          list: CategoryListProps['categoryList'],\n          {\n            node: {\n              frontmatter: { categories },\n            },\n          }: PostType,\n        ) => {\n          categories.forEach(category => {\n            if (list[category] === undefined) list[category] = 1\n            else list[category]++\n          })\n\n          list['All']++\n\n          return list\n        },\n        { All: 0 },\n      ),\n    [],\n  )\n  return (\n    <Template\n      title={title}\n      description={description}\n      url={siteUrl}\n      image={publicURL}\n    >\n      <Introduction profileImage={gatsbyImageData} />\n      <CategoryList\n        selectedCategory={selectedCategory}\n        categoryList={categoryList}\n      />\n      <PostList selectedCategory={selectedCategory} posts={edges} />\n    </Template>\n  )\n}\n\nexport default IndexPage\n\nexport const getPostList = graphql`\n  query getPostList {\n    site {\n      siteMetadata {\n        title\n        description\n        siteUrl\n      }\n    }\n    allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___date, frontmatter___title] }\n    ) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            summary\n            date(formatString: \"YYYY.MM.DD.\")\n            categories\n            thumbnail {\n              childImageSharp {\n                gatsbyImageData(width: 768, height: 400)\n              }\n            }\n          }\n        }\n      }\n    }\n    file(name: { eq: \"profile-image\" }) {\n      childImageSharp {\n        gatsbyImageData(width: 120, height: 120)\n      }\n      publicURL\n    }\n  }\n`\n"],"names":["hasOwnProperty","obj","prop","Object","prototype","call","module","exports","qs","sep","eq","options","length","regexp","split","maxKeys","len","i","kstr","vstr","k","v","x","replace","idx","indexOf","substr","decodeURIComponent","Array","isArray","push","stringifyPrimitive","isFinite","name","undefined","keys","map","ks","encodeURIComponent","join","filter","Boolean","parse","ProfileImageWrapper","GatsbyImage","profileImage","image","alt","Background","Wrapper","SubTitle","Title","CategoryListWrapper","CategoryItem","active","props","source","excluded","key","target","sourceKeys","selectedCategory","categoryList","entries","count","to","PostItemWrapper","Link","ThumbnailImage","PostItemContent","Date","Category","Summary","title","date","categories","summary","gatsbyImageData","thumbnail","childImageSharp","link","category","posts","containerRef","useRef","observer","useState","setCount","postListByCategory","useMemo","node","frontmatter","includes","useEffect","current","IntersectionObserver","isIntersecting","value","unobserve","children","observe","postList","slice","PostListWrapper","useInfiniteScroll","ref","id","slug","fields","search","location","data","site","siteMetadata","description","siteUrl","edges","allMarkdownRemark","file","publicURL","parsedCategory","queryString","reduce","list","forEach","All","Template","url","CategoryList"],"sourceRoot":""}